@import "../config/grid";

$_min-start: 1;
$_max-end: $number-columns + 1;

@mixin generate-nested-grids($modifier: "") {
  @for $i from $_min-start through $_max-end {
    &-#{$i}#{$modifier} {
      grid-template-columns: repeat(#{$i}, 1fr);
    }
  }
}

@mixin generate-column($modifier: "") {
  @for $i from $_min-start through $_max-end {
    @for $j from $i through $_max-end {
      @if ($j != $i) {
        &-#{$i}-#{$j}#{$modifier} {
          grid-column: #{$i}/#{$j};
        }
      }
    }
  }
}

.grid {
  box-sizing: content-box; //set default for consistency across browsers
  display: grid;
  grid-column-gap: $gutter;
  grid-template-columns: repeat($number-columns, 1fr);
  margin: 0 auto;
  max-width: $max-width;

  &--justify-normal {
    justify-items: normal;
  }

  &--justify-center {
    justify-items: center;
  }

  &--align-normal {
    align-items: normal;
  }

  &--align-end {
    align-items: end;
  }

  &--align-center {
    align-items: center;
  }

  @include generate-nested-grids();

  @include medium-screen {
    @include generate-nested-grids($medium-modifier);
  }

  @include large-screen {
    @include generate-nested-grids($large-modifier);
  }
}

.column {
  @include generate-column();

  &--justify-normal {
    justify-self: normal;
  }

  &--justify-center {
    justify-self: center;
  }

  &--align-normal {
    align-self: normal;
  }

  &--align-end {
    align-self: end;
  }

  &--align-center {
    align-self: center;
  }

  @include medium-screen {
    @include generate-column($medium-modifier);
  }

  @include large-screen {
    @include generate-column($large-modifier);
  }
}
