@mixin generate-nested-grids($modifier: "") {
  @for $i from 1 through 13 {
    &-#{$i}#{$modifier} {
      grid-template-columns: repeat(#{$i}, 1fr);
    }
  }
}

@mixin generate-column($modifier: "") {
  @for $i from 1 through 13 {
    @for $j from $i through 13 {
      @if ($j != $i) {
        &-#{$i}-#{$j}#{$modifier} {
          grid-column: #{$i}/#{$j};
        }
      }
    }
  }
}

.grid {
  box-sizing: content-box;
  display: grid;
  grid-column-gap: 20px;
  grid-template-columns: repeat(12, 1fr);
  //justify-self: auto;
  margin: 0 auto;
  max-width: 1200px;

  &--justify-normal {
    justify-items: normal;
  }

  &--justify-center {
    justify-items: center;
  }

  &--align-normal {
    align-items: normal;
  }

  &--align-end {
    align-items: end;
  }

  &--align-center {
    align-items: center;
  }

  @include generate-nested-grids();

  @media (min-width: 551px) {
    @include generate-nested-grids("--medium");
  }

  @media (min-width: 1024px) {
    @include generate-nested-grids("--large");
  }
}
$color: #563d7c;

.col {
  background-color: rgba($color, 0.15);

  @include generate-column();

  &--justify-normal {
    justify-self: normal;
  }

  &--justify-center {
    justify-self: center;
  }

  &--align-normal {
    align-self: normal;
  }

  &--align-end {
    align-self: end;
  }

  &--align-center {
    align-self: center;
  }

  @media (min-width: 551px) {
    @include generate-column("--medium");
  }

  @media (min-width: 1024px) {
    @include generate-column("--large");
  }
}
